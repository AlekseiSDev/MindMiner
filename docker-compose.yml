services:
  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
    volumes:
      - ./qdrant_data:/qdrant/storage

  initializer:
    container_name: initializer
    build:
      dockerfile: builds/init/Dockerfile
      context: .
    image: initializer
    env_file:
      - "app/.env"
    depends_on:
      qdrant:
        condition: service_started

  backend:
    container_name: backend
    build: 
      dockerfile: builds/backend/Dockerfile
    image: backend
    env_file:
      - "app/.env"
    ports:
      - "8000:8000"
    depends_on:
      initializer:
        condition: service_completed_successfully

  frontend:
    container_name: frontend
    build: 
      dockerfile: builds/frontend/Dockerfile
    image: frontend
    env_file:
      - "app/.env"
    ports:
      - "80:8501"
    depends_on:
      backend:
        condition: service_started

  proxy:
    container_name: proxy
    image: shadowsocks/shadowsocks-libev:edge
    restart: always
    volumes:
      - ./config.json:/config.json
    command: ["ss-local", "-c", "config.json"]

  tgbot:
    container_name: tgbot
    build: 
      dockerfile: builds/bot/Dockerfile
    image: bot
    env_file:
      - "bot/.env"
    depends_on:
      backend:
        condition: service_started
